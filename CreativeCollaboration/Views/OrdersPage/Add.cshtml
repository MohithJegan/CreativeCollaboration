@model AUOrderDto

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="text-uppercase fw-bold text-light">Add New Order</h2>
    <a href="/Orders/List" class="btn btn-outline-light px-4 py-2">Back to List</a>
</div>

<!-- Form -->
<form asp-action="Add" method="post" style="background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.2); padding: 20px; border-radius: 15px;">
    @Html.AntiForgeryToken()

    <!-- Customer Selection -->
    <div class="form-group mb-3">
        <label for="CustomerId" class="form-label fw-semibold text-light">Customer Name:</label>
        <select asp-for="CustomerId" class="form-control" asp-items="ViewBag.Customers" required>
            <option value="">-- Select Customer --</option>
        </select>
        <span asp-validation-for="CustomerId" class="text-danger"></span>
    </div>

    <!-- Order Date -->
    <div class="form-group mb-3">
        <label asp-for="OrderDate" class="form-label fw-semibold text-light">Order Date:</label>
        <input asp-for="OrderDate" type="date" class="form-control" required min="2000-01-01" max="2099-12-31" />
        <span asp-validation-for="OrderDate" class="text-danger"></span>
    </div>


    <hr />

    <!-- Order Items -->
    <h3 class="text-center">Order Items</h3>
    <div id="orderItemsContainer">
        <div class="order-item">
            <label class="fw-semibold text-light">Menu Item:</label>
            <select name="OrderItems[0].MenuItemId" class="form-control menu-item-select" required>
                <option value="">-- Select Menu Item --</option>
                @foreach (var item in ViewBag.MenuItems)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>

            <label class="fw-semibold text-light">Quantity:</label>
            <input name="OrderItems[0].Quantity" type="number" class="form-control quantity-input" min="1" required />

            <input type="hidden" name="OrderItems[0].UnitOrderItemPrice" class="unit-price" />
            <input type="hidden" name="OrderItems[0].TotalPrice" class="total-price" />
        </div>
    </div>

    <button type="button" id="addItem" class="btn btn-secondary mt-2">+ Add Another Item</button>

    <hr />

    <!-- Buttons -->
    <div class="form-group mt-3">
        <input type="submit" class="btn btn-success" value="Place Order" style="background: rgba(40, 167, 69, 0.8); border: 1px solid rgba(40, 167, 69, 0.8); color: white;" />
        <a asp-action="List" class="btn btn-secondary">Cancel</a>
    </div>
</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".menu-item-select").forEach(function (select) {
            select.addEventListener("change", function () {
                var unitPrice = this.options[this.selectedIndex].text.split("$")[1];
                this.parentElement.querySelector(".unit-price").value = unitPrice;
            });
        });

        document.getElementById("addItem").addEventListener("click", function () {
            var index = document.querySelectorAll(".order-item").length;
            var newItem = document.querySelector(".order-item").cloneNode(true);
            newItem.innerHTML = newItem.innerHTML.replace(/\[0\]/g, "[" + index + "]");
            document.getElementById("orderItemsContainer").appendChild(newItem);
        });

        document.getElementById("orderItemsContainer").addEventListener("input", function (e) {
            if (e.target.classList.contains("quantity-input")) {
                var unitPrice = e.target.parentElement.querySelector(".unit-price").value;
                e.target.parentElement.querySelector(".total-price").value = e.target.value * unitPrice;
            }
        });
    });
</script>

<style>
    .add-order-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: #f8f9fa;
    }

    .add-order-card {
        width: 550px;
        padding: 30px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    label {
        font-weight: 600;
        font-size: 1rem;
        display: block;
        margin-top: 10px;
        color: white;
    }

    .form-control {
        width: 100%;
        padding: 12px;
        font-size: 1rem;
        border-radius: 6px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        background: rgba(255, 255, 255, 0.1);
        color: white;
    }

    .btn {
        font-size: 1rem;
        padding: 12px 24px;
        border-radius: 8px;
        transition: all 0.3s ease-in-out;
    }

    .btn-primary:hover, .btn-secondary:hover {
        transform: translateY(-2px);
    }
</style>